<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">

	<!-- 로그인 처리(Map) : id,pass -> 아이디와 이름 결과 -->
	<select id="login" parameterType="java.util.Map"
		resultType="java.util.Map">
		select
		mem_userid,mem_password,mem_username,mem_photo,mem_level
		from member
		where mem_userid=#{id}
	</select>

	<!-- 회원가입하기 -->
	<insert id="make"
		parameterType="kr.co.forearlybird.domain.Member">
		insert into
		member(mem_userid,mem_password,mem_nickname,mem_username,mem_phone,mem_birthday)
		values(#{mem_userid},#{mem_password},#{mem_nickname},#{mem_username},#{mem_phone},#{mem_birthday})
	</insert>

	<!-- 내 정보 보기 처리(Map) : id,username,nickname,tel,birth -->
	<select id="detail" parameterType="java.lang.String"
		resultType="kr.co.forearlybird.domain.Member">
		select *
		from member
		where mem_userid=#{id}
	</select>

	<update id="update" parameterType="java.util.Map">
		update member
		set
		mem_nickname=#{nick},mem_phone=#{phone}
		where mem_userid=#{id}
	</update>

	<update id="delete" parameterType="java.lang.String">
		update member
		set mem_level =
		'4'
		where mem_userid=#{id}
	</update>

	<update id="profileupdate" parameterType="java.util.Map">
		update member
		set
		mem_photo = #{url}
		where mem_userid = #{user}
	</update>

	<select id="searchID"
		parameterType="kr.co.forearlybird.domain.Member"
		resultType="java.lang.String">
		select mem_userid
		from member
		where mem_username =
		#{mem_username} and mem_phone = #{mem_phone} and mem_birthday =
		#{mem_birthday}
	</select>

	<insert id="insertUser">
		insert into
		member(mem_userid,mem_password,mem_nickname,mem_username,mem_phone,mem_birthday)
		values(#{mem_userid},#{mem_password},#{mem_nickname},#{mem_username},#{mem_phone},#{mem_birthday})
	</insert>

	<update id="createAuthKey">
		update member set mem_profile_content =
		#{mem_profile_content}
		where mem_adminmemo =
		#{mem_adminmemo}
	</update>

	<update id="userAuth" parameterType="java.lang.String">
		update member set
		mem_level=3
		where mem_userid=#{user_email}
	</update>

	<update id="searchPWD">
		update member set mem_password = #{mem_password}
		where mem_userid=#{mem_userid} and mem_username = #{mem_username} and
		mem_phone= #{mem_phone} and mem_birthday = #{mem_birthday}
	</update>

	<select id="rawPw" parameterType="java.util.Map"
		resultType="java.lang.String">
		select mem_password
		from member
		where mem_userid=#{id}
	</select>

	<select id="getMemberNickName" parameterType="java.lang.String"
		resultType="java.lang.String">
		SELECT mem_nickname FROM member WHERE
		mem_userid=#{mem_userid}
	</select>

	<select id="getMemberListById" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT mem_userid, mem_nickname, mem_level FROM member
		WHERE
		mem_userid=#{mem_userid}
	</select>

	<select id="getMemberListByNickname"
		parameterType="java.util.Map" resultType="java.util.Map">
		SELECT mem_userid,
		mem_nickname,
		mem_level FROM member WHERE
		mem_nickname=#{mem_nickname}
	</select>

	<select id="getMemberListBylevel" parameterType="java.util.Map"
		resultType="java.util.Map">
		SELECT mem_userid,
		mem_nickname, mem_level FROM member WHERE
		mem_level=#{mem_level}
	</select>

	<select id="getMemberListByMinLevel"
		parameterType="java.lang.Integer" resultType="java.util.Map">
		<![CDATA[
		SELECT mem_userid,
		mem_nickname, mem_level FROM member WHERE mem_level>=#{mem_level}
		]]>
	</select>

	<select id="getMemberListLikesThisName"
		parameterType="java.lang.String" resultType="java.lang.String">
		SELECT mem_userid FROM
		member WHERE mem_nickname LIKE CONCAT('%', #{keyword}, '%')
	</select>
</mapper>